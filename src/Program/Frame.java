/*
 * |----------------JMat (Java Master)-------------------------------------|
 * |Setiap Manusia Yang Menata Hidupnya adalah Programmer                  |
 * |Hak Cipta Hanya Milik Allah SWT, Hamba-Nya Hanya Memanfaatkan.         |
 * |Manusia Tidak Bisa Mewujudkan Apa-apa, Manusia Hanya Bisa Merencanakan.| 
 * |----------------JMat (Java Master)-------------------------------------| 
 */
package Program;

import com.stripbandunk.jglasspane.JGlassPane;
import com.stripbandunk.jglasspane.component.ImageTransitionComponent;
import com.stripbandunk.jglasspane.transition.image.creator.ComponentImageCreator;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;
import san.jmat.kelas.PackText;
import san.jmat.panel.render.panelMain;
import san.jmat.panel.render.subDialog;

/**
 *
 * @author joker
 */
public class Frame extends javax.swing.JFrame {

    private panelMain panMain;
    public static PackText packText = new PackText();
    private FileNameExtensionFilter filter = new FileNameExtensionFilter("Java Master", "jpg", "png");
    private JFileChooser jFileChooser = new JFileChooser();
    private File file = jFileChooser.getCurrentDirectory();
    private DefaultComboBoxModel defaultComboBoxModel = new DefaultComboBoxModel();
    private boolean messageExit = false;
    
    /**
     * Creates new form Frame
     */
    public Frame() {
        initComponents();
        setTitle("Create Text For Your Image");
        setLocationRelativeTo(null);
        setSize(750, 600);
        panMain = new panelMain();
        panMain.setPackText(packText);
        jScrollPane1.setViewportView(panMain);
        repaint();
        packText.setComboBoxModel(defaultComboBoxModel);
        jComboBox1.setModel(defaultComboBoxModel);
        setGlassPane(jGlassPane1);
        getGlassPane().setVisible(true);
        jGlassPane1.addGlassPaneComponent(imageTransitionComponent1);
        imageTransitionComponent1.setImageCreator(new ComponentImageCreator(panelPivot));
        
        
    }

    public JPanel getPanelPivot() {
        return panelPivot;
    }

    public ImageTransitionComponent getImageTransitionComponent1() {
        return imageTransitionComponent1;
    }

    public JGlassPane getjGlassPane1() {
        return jGlassPane1;
    }

    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jGlassPane1 = new com.stripbandunk.jglasspane.JGlassPane();
        imageTransitionComponent1 = new com.stripbandunk.jglasspane.component.ImageTransitionComponent();
        panelBackground21 = new san.jmat.panel.render.panelBackground2();
        panelPivot = new javax.swing.JPanel();
        panelWelcome = new javax.swing.JPanel();
        panelItemMenuFile = new javax.swing.JPanel();
        buttonSave1 = new san.jmat.button.render.buttonSave();
        buttonOpen1 = new san.jmat.button.render.buttonOpen();
        buttonExit1 = new san.jmat.button.render.buttonExit();
        panelCreateText = new javax.swing.JPanel();
        buttonCreateText1 = new san.jmat.button.render.buttonCreateText();
        buttonUpdateText1 = new san.jmat.button.render.buttonUpdateText();
        jPanel2 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        panelMenuBar1 = new san.jmat.panel.render.panelMenuBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        panelBackground21.setLayout(new java.awt.GridBagLayout());

        panelPivot.setOpaque(false);
        panelPivot.setLayout(new java.awt.CardLayout());

        panelWelcome.setOpaque(false);
        panelPivot.add(panelWelcome, "welcome");

        panelItemMenuFile.setOpaque(false);
        panelItemMenuFile.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        buttonSave1.setEnabled(false);
        buttonSave1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSave1ActionPerformed(evt);
            }
        });
        panelItemMenuFile.add(buttonSave1);

        buttonOpen1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOpen1ActionPerformed(evt);
            }
        });
        panelItemMenuFile.add(buttonOpen1);

        buttonExit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExit1ActionPerformed(evt);
            }
        });
        panelItemMenuFile.add(buttonExit1);

        panelPivot.add(panelItemMenuFile, "itemFile");

        panelCreateText.setOpaque(false);
        panelCreateText.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        buttonCreateText1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCreateText1ActionPerformed(evt);
            }
        });
        panelCreateText.add(buttonCreateText1);

        buttonUpdateText1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUpdateText1ActionPerformed(evt);
            }
        });
        panelCreateText.add(buttonUpdateText1);

        panelPivot.add(panelCreateText, "Menu Text");

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 557;
        gridBagConstraints.ipady = 49;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 0);
        panelBackground21.add(panelPivot, gridBagConstraints);

        jPanel2.setOpaque(false);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel2.add(jComboBox1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 589;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 0);
        panelBackground21.add(jPanel2, gridBagConstraints);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setAutoscrolls(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 663;
        gridBagConstraints.ipady = 271;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 0);
        panelBackground21.add(jScrollPane1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        panelBackground21.add(panelMenuBar1, gridBagConstraints);

        getContentPane().add(panelBackground21, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        panelMenuBar1.setFrame(this);
    }//GEN-LAST:event_formWindowActivated

    private void buttonOpen1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOpen1ActionPerformed
        // TODO add your handling code here:
        String file;
        jFileChooser = new JFileChooser();
        jFileChooser.setFileFilter(filter);
        jFileChooser.setCurrentDirectory(this.file);
        int result;
        result = jFileChooser.showOpenDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            file = jFileChooser.getSelectedFile().toString();
            packText.setImage(new ImageIcon(file).getImage());
            panMain.resize();
            this.repaint();
            this.file = jFileChooser.getCurrentDirectory();
            buttonSave1.setEnabled(true);
            messageExit = true;
        }
    }//GEN-LAST:event_buttonOpen1ActionPerformed

    private void buttonSave1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSave1ActionPerformed
        // TODO add your handling code here:
        String file;
        jFileChooser = new JFileChooser();
        jFileChooser.setFileFilter(filter);
        jFileChooser.setCurrentDirectory(this.file);
        int result;
        result = jFileChooser.showSaveDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            try {
                file = jFileChooser.getSelectedFile().toString() + ".png";
                //jika file yang dinputkan diformatkan jpg ubah menjadi png
                String format = (file.endsWith(".jpg")) ? "jpg" : "png";
                //tulis file dihardis
                ImageIO.write(panMain.getBufferedImage(), format, new File(file));
                buttonSave1.setEnabled(false);
                messageExit = false;
            } catch (IOException ex) {
                Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_buttonSave1ActionPerformed

    private void buttonExit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExit1ActionPerformed
        // TODO add your handling code here:
        if (messageExit) {
            int showConfirmDialog = JOptionPane.showConfirmDialog(this, "Data anda belum "
                    + "disimpan", "Warrning", JOptionPane.WARNING_MESSAGE);
            if (showConfirmDialog == JOptionPane.YES_OPTION) {
                buttonSave1ActionPerformed(evt);

            } else {
                System.exit(0);
            }
        } else {
            System.exit(0);
        }
    }//GEN-LAST:event_buttonExit1ActionPerformed

    private void buttonCreateText1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCreateText1ActionPerformed
        // TODO add your handling code here:
        subDialog dialog = new subDialog(true, -1);
        dialog.setLocationRelativeTo(null);
        dialog.setVisible(true);
    }//GEN-LAST:event_buttonCreateText1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        packText.setTextSelection(jComboBox1.getSelectedIndex());
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void buttonUpdateText1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUpdateText1ActionPerformed
        // TODO add your handling code here:
        subDialog dialog;
        if (jComboBox1.getSelectedIndex() >= 0) {
            dialog = new subDialog(true, jComboBox1.getSelectedIndex());
            dialog.setLocationRelativeTo(null);
            dialog.setVisible(true);
        }else{
            JOptionPane.showMessageDialog(this, "Silahkan Pilih Text Yang Mau DiEdit", "Error Message", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_buttonUpdateText1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Frame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private san.jmat.button.render.buttonCreateText buttonCreateText1;
    private san.jmat.button.render.buttonExit buttonExit1;
    private san.jmat.button.render.buttonOpen buttonOpen1;
    private san.jmat.button.render.buttonSave buttonSave1;
    private san.jmat.button.render.buttonUpdateText buttonUpdateText1;
    private com.stripbandunk.jglasspane.component.ImageTransitionComponent imageTransitionComponent1;
    private javax.swing.JComboBox jComboBox1;
    private com.stripbandunk.jglasspane.JGlassPane jGlassPane1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private san.jmat.panel.render.panelBackground2 panelBackground21;
    private javax.swing.JPanel panelCreateText;
    private javax.swing.JPanel panelItemMenuFile;
    private san.jmat.panel.render.panelMenuBar panelMenuBar1;
    private javax.swing.JPanel panelPivot;
    private javax.swing.JPanel panelWelcome;
    // End of variables declaration//GEN-END:variables
}
